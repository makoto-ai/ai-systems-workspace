version: '3.8'

services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - WHISPERX_ENDPOINT=${WHISPERX_ENDPOINT}
      - GROQ_API_KEY=${GROQ_API_KEY}
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
    volumes:
      - ./app:/app
      - ./logs:/app/logs
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=ai_systems
      - POSTGRES_USER=ai_user
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD:-ai_password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  vault:
  voicevox-engine:
    image: voicevox/voicevox_engine:cpu-ubuntu20.04-latest
    container_name: voicevox-engine
    ports:
      - "50021:50021"
    environment:
      - VV_ENABLE_CORS=1
    restart: unless-stopped
    image: vault:1.15
    ports:
      - "8200:8200"
    environment:
      - VAULT_DEV_ROOT_TOKEN_ID=${VAULT_TOKEN:-dev-token}
      - VAULT_DEV_LISTEN_ADDRESS=0.0.0.0:8200
    cap_add:
      - IPC_LOCK
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
