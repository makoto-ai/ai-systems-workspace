name: 🚀 Auto Deploy via Docker

on:
  push:
    branches:
      - main
  workflow_dispatch: # 手動実行も可能

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: ✅ Checkout repository
        uses: actions/checkout@v3

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🔐 Load Secrets (GitHub or Vault)
        env:
          VAULT_TOKEN: ${{ secrets.VAULT_TOKEN }}
          WHISPERX_ENDPOINT: ${{ secrets.WHISPERX_ENDPOINT }}
        run: |
          # まずGitHub Secretsを環境に流す
          if [ -n "$WHISPERX_ENDPOINT" ]; then
            echo "WHISPERX_ENDPOINT=$WHISPERX_ENDPOINT" >> "$GITHUB_ENV"
          fi

          # VAULT_TOKENが設定されている場合のみVaultを使って上書き注入
          if [ -n "$VAULT_TOKEN" ]; then
            sudo apt-get update && sudo apt-get install -y jq curl gnupg lsb-release
            curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo apt-key add -
            sudo apt-add-repository "deb [arch=amd64] https://apt.releases.hashicorp.com $(lsb_release -cs) main"
            sudo apt-get update && sudo apt-get install -y vault
            echo "$VAULT_TOKEN" | vault login -
            SECRETS_JSON=$(vault kv get -format=json secret/ai-systems)
            echo "$SECRETS_JSON" | jq -r '.data.data | to_entries | .[] | "\(.key)=\(.value)"' >> "$GITHUB_ENV"
          fi

      - name: 🧪 Run Pre-Deployment Tests
        run: |
          docker-compose -f docker-compose.yml run --rm app pytest || true

      - name: 🏗️ Build and Restart Containers
        run: |
          docker-compose down
          docker-compose up -d --build

      - name: ✅ Health Check
        run: |
          sleep 30
          curl -f http://localhost:8000/health || echo "⚠️ Health check failed"

      - name: 🌐 Export STT Secrets
        env:
          GROQ_API_KEY: ${{ secrets.GROQ_API_KEY }}
          WHISPERX_ENDPOINT: ${{ secrets.WHISPERX_ENDPOINT }}
        run: |
          if [ -n "$GROQ_API_KEY" ]; then echo "GROQ_API_KEY=$GROQ_API_KEY" >> "$GITHUB_ENV"; fi
          if [ -n "$WHISPERX_ENDPOINT" ]; then echo "WHISPERX_ENDPOINT=$WHISPERX_ENDPOINT" >> "$GITHUB_ENV"; fi

      - name: ✅ Notify Deployment Success
        run: |
          echo "🎉 Deployment completed successfully!"
          echo "📊 System Status:"
          docker-compose ps
