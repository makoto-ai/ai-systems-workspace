name: Weekly Golden Test Check

on:
  schedule:
    # 毎週金曜日 09:00 JST (00:00 UTC)
    - cron: '0 0 * * 5'
  workflow_dispatch: # 手動実行も可能

jobs:
  weekly-golden-check:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          cache: 'pip'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Run weekly golden check
        id: golden_check
        run: |
          chmod +x scripts/weekly_golden_check.sh
          ./scripts/weekly_golden_check.sh > golden_output.txt 2>&1
          cat golden_output.txt
          
          # 合格率を抽出
          PASS_RATE=$(grep "合格率:" golden_output.txt | grep -o '[0-9]\+/[0-9]\+' | head -1)
          PASSED=$(echo $PASS_RATE | cut -d'/' -f1)
          TOTAL=$(echo $PASS_RATE | cut -d'/' -f2)
          PERCENTAGE=$((PASSED * 100 / TOTAL))
          
          echo "pass_rate=$PASS_RATE" >> $GITHUB_OUTPUT
          echo "percentage=$PERCENTAGE" >> $GITHUB_OUTPUT
          echo "passed=$PASSED" >> $GITHUB_OUTPUT
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          
      - name: Upload golden test logs
        uses: actions/upload-artifact@v4
        with:
          name: golden-test-logs-${{ github.run_number }}
          path: |
            tests/golden/logs/
            tests/golden/observation_log.md
            golden_output.txt
          retention-days: 30
          
      - name: Check pass rate and create issue if needed
        if: steps.golden_check.outputs.percentage < 80
        uses: actions/github-script@v7
        with:
          script: |
            const passRate = '${{ steps.golden_check.outputs.pass_rate }}';
            const percentage = '${{ steps.golden_check.outputs.percentage }}';
            
            const issueTitle = `🔥 Golden Test 合格率低下: ${passRate} (${percentage}%)`;
            const issueBody = `
            ## 🚨 Golden Test 合格率が80%を下回りました
            
            **合格率**: ${passRate} (${percentage}%)
            **実行日**: ${{ github.run_id }}
            **しきい値**: 0.3
            
            ### 緊急対応が必要です
            
            #### 対応手順
            1. \`tests/golden/logs/\` の最新ログを確認
            2. 不合格ケースの原因分析
            3. \`tests/golden/evaluator.py\` の正規化辞書を更新
            4. 必要に応じてシステム指示やモデル切替を検討
            
            #### 関連ファイル
            - 観測ログ: \`tests/golden/observation_log.md\`
            - 評価器: \`tests/golden/evaluator.py\`
            - 実行ログ: Artifacts からダウンロード可能
            
            ### 自動生成
            このIssueは週次Golden Testの自動チェックにより生成されました。
            `;
            
            // 既存の同様のIssueがあるかチェック
            const existingIssues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              labels: ['golden-test', 'urgent']
            });
            
            const hasOpenIssue = existingIssues.data.some(issue => 
              issue.title.includes('Golden Test 合格率低下')
            );
            
            if (!hasOpenIssue) {
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: issueBody,
                labels: ['golden-test', 'urgent', 'quality']
              });
            }
            
      - name: Fail if pass rate is too low
        if: steps.golden_check.outputs.percentage < 80
        run: |
          echo "❌ Golden Test 合格率が80%を下回りました: ${{ steps.golden_check.outputs.percentage }}%"
          echo "緊急対応が必要です。GitHub Issueを確認してください。"
          exit 1
          
      - name: Success notification
        if: steps.golden_check.outputs.percentage >= 80
        run: |
          echo "✅ Golden Test 合格率良好: ${{ steps.golden_check.outputs.percentage }}%"
          echo "品質維持されています。"
