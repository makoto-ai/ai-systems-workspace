<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<array>
  <dict>
    <key>Activate</key>
    <string>Normal</string>
    <key>CreationDate</key>
    <real>778800000</real>
    <key>Macros</key>
    <array>
      <dict>
        <key>Actions</key>
        <array>
          <dict>
            <key>ActionUID</key>
            <integer>1001</integer>
            <key>HonourFailureSettings</key>
            <true/>
            <key>IncludeStdErr</key>
            <false/>
            <key>MacroActionType</key>
            <string>ExecuteShellScript</string>
            <key>Path</key>
            <string></string>
            <key>Source</key>
            <string>Nothing</string>
            <key>Text</key>
            <string><![CDATA[#!/bin/zsh
set -u

REPO="${REPO:-$HOME/ai-driven/ai-systems-workspace}"
LOG="${LOG:-$HOME/Documents/Logs/pre_commit_watch.log}"
INTERVAL="${INTERVAL:-3}"
SOUND="${SOUND:-/System/Library/Sounds/Glass.aiff}"
mkdir -p "$(dirname "$LOG")"

# Menu via AppleScript (robust)
CHOICE=$(osascript \
  -e 'set L to {"Pre-commit 監視（拡張）","総合スタック監視（3秒ごと）","監視ログを tail -f","特定PIDを top で監視","監視を停止（pkill）"}' \
  -e 'set C to choose from list L with prompt "Dev Watch Hub" default items {item 1 of L} OK button name "実行" cancel button name "キャンセル"' \
  -e 'if C is false then return "__CANCEL__" else return item 1 of C as string')

[[ "$CHOICE" == "__CANCEL__" ]] && exit 0

run_term(){ /usr/bin/osascript -e "tell application \"Terminal\" to do script \"$1\""; }

case "$CHOICE" in
  "Pre-commit 監視（拡張）")
    run_term "/bin/zsh -lc 'cd \"$REPO\"; echo \"== $(date '+%F %T') :: watch start ==\" >> \"$LOG\"; \
while pgrep -f pre-commit >/dev/null 2>&1; do \
  PIDS=$(pgrep -f pre-commit | tr '\n' ' '); \
  SNAP=$(ps -o pid,etime,pcpu,pmem,command -p $PIDS 2>/dev/null | sed '1!b;n' || true); \
  NOW=$(date '+%F %T'); { echo \"[$NOW]\"; echo \"$SNAP\"; } >> \"$LOG\"; \
  sleep 5; \
done; \
echo \"== $(date '+%F %T') :: finished ==\" >> \"$LOG\"; \
osascript -e \"display notification \\\"pre-commit: finished\\\" with title \\\"KM Watch\\\"\"'" ;;

  "総合スタック監視（3秒ごと）")
    run_term "/bin/zsh -lc 'INTERVAL=$INTERVAL; while true; do clear; date \"+%F %T\"; \
echo \"=== PROCESSES (pre-commit/python/docker) ===\"; \
ps -Ao pid,etime,pcpu,pmem,command | egrep "'pre-commit|python(|3\\.[0-9])|docker|pytest'" | grep -v egrep | head -n 40 || true; \
echo; echo \"=== DOCKER CONTAINERS ===\"; docker ps --format \"table {{.Names}}\\t{{.Status}}\\t{{.Image}}\" || true; \
echo; echo \"=== DOCKER STATS (1-shot) ===\"; docker stats --no-stream --format \"table {{.Name}}\\t{{.CPUPerc}}\\t{{.MemUsage}}\\t{{.NetIO}}\" || true; \
sleep $INTERVAL; done'" ;;

  "監視ログを tail -f")
    run_term "/bin/zsh -lc 'mkdir -p \"$(dirname \"$LOG\")\"; touch \"$LOG\"; tail -f \"$LOG\"'" ;;

  "特定PIDを top で監視")
    PID=$(osascript -e 'text returned of (display dialog "監視する PID:" default answer "" buttons {"OK"} default button "OK")') || exit 0
    [[ -z "$PID" ]] && exit 0
    run_term "/bin/zsh -lc 'top -pid \"$PID\"'" ;;

  "監視を停止（pkill）")
    pkill -f "pre-commit run|pre-commit autoupdate|stackwatch" || true
    osascript -e 'display notification "watchers: stop signal sent" with title "KM Watch"' ;;
esac
]]></string>
            <key>TimeOutAbortsMacro</key>
            <true/>
            <key>TrimResults</key>
            <true/>
            <key>TrimResultsNew</key>
            <true/>
            <key>UseText</key>
            <true/>
          </dict>
        </array>
        <key>CreationDate</key>
        <real>778800001</real>
        <key>ModificationDate</key>
        <real>778800002</real>
        <key>Name</key>
        <string>Dev Watch Hub (pre-commit + stackwatch)</string>
        <key>Triggers</key>
        <array>
          <dict>
            <key>FireType</key>
            <string>Pressed</string>
            <key>KeyCode</key>
            <integer>35</integer>
            <key>MacroTriggerType</key>
            <string>HotKey</string>
            <key>Modifiers</key>
            <integer>6400</integer>
          </dict>
        </array>
        <key>UID</key>
        <string>MACRO-DEV-WATCH-HUB-READY</string>
      </dict>
    </array>
    <key>Name</key>
    <string>Global Macro Group</string>
    <key>UID</key>
    <string>GROUP-DEV-WATCH-HUB-READY</string>
  </dict>
</array>
</plist>


